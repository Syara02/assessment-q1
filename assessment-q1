/**
 * Function to compute the correct ordering for the tasks specified in the config.
 *
 * @param {Object[]} tasks - The array of tasks with their dependencies.
 * @returns {string[]} The correct ordering of the tasks.
 */
function computeTaskOrder(tasks) {
    // Create a map to store the dependencies for each task
    const dependenciesMap = {};

    // Create a map to store the number of dependencies for each task
    const numDependenciesMap = {};

    // Iterate through the tasks and populate the dependencies map and num dependencies map
    for (const task of tasks) {
        const { name, depends_on } = task;
        dependenciesMap[name] = depends_on;
        numDependenciesMap[name] = depends_on.length;
    }

    // Create a queue to store the tasks with no dependencies
    const queue = [];

    // Add the tasks with no dependencies to the queue
    for (const task of tasks) {
        const { name, depends_on } = task;
        if (depends_on.length === 0) {
            queue.push(name);
        }
    }

    // Create an array to store the correct ordering of the tasks
    const taskOrder = [];

    // Process the tasks in the queue
    while (queue.length > 0) {
        const task = queue.shift();
        taskOrder.push(task);

        // Decrease the number of dependencies for the dependent tasks
        for (const dependentTask in dependenciesMap) {
            if (dependenciesMap[dependentTask].includes(task)) {
                numDependenciesMap[dependentTask]--;

                // If all dependencies are completed, add the dependent task to the queue
                if (numDependenciesMap[dependentTask] === 0) {
                    queue.push(dependentTask);
                }
            }
        }
    }

    // Check if there are any tasks with remaining dependencies
    for (const task in numDependenciesMap) {
        if (numDependenciesMap[task] > 0) {
            throw new Error(`Cannot compute task order. Task '${task}' has unresolved dependencies.`);
        }
    }

    return taskOrder;
}

// Example usage
const tasks = [
    {
        name: "compile",
        depends_on: ["check_build_script", "lint"]
    },
    {
        name: "lint",
        depends_on: ["check_build_script"]
    },
    {
        name: "package",
        depends_on: ["compile"]
    },
    {
        name: "test",
        depends_on: ["package"]
    }
];

const taskOrder = computeTaskOrder(tasks);
console.log("Task Order:", taskOrder);